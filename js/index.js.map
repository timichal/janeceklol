{
  "version": 3,
  "sources": ["../../build/js/canvas.js", "../../build/js/image.js", "../../build/js/index.js"],
  "sourcesContent": ["const overlayImage = new Image();\noverlayImage.src = \"public/janecek.png\";\n\nconst renderCanvas = async ({ canvas, state }) => {\n  const ctx = canvas.getContext(\"2d\");\n  // clear to black (for transparent images)\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n  // scale image to always fill the canvas\n  const scaleX = canvas.width / state.image.width;\n  const scaleY = canvas.height / state.image.height;\n  const scale = Math.max(scaleX, scaleY);\n  ctx.setTransform(scale, 0, 0, scale, 0, 0);\n  ctx.drawImage(state.image, 0, 0);\n  ctx.setTransform(); // reset so that everything else is normal size\n\n  ctx.drawImage(\n    overlayImage,\n    state.overlayCoords.x,\n    state.overlayCoords.y,\n    state.overlayCoords.width,\n    state.overlayCoords.height,\n  );\n\n  if (state.displayText) {\n    const fontSize = 95;\n    const lineHeight = 95;\n    const maxWidth = 750;\n    ctx.font = `bold ${fontSize}px 'bc-novatica-cyr'`;\n    const text = state.text || \"Tohle s memy\";\n    const x = 50;\n    let y = 350;\n    ctx.fillStyle = \"#f9dc4d\";\n    ctx.textBaseline = \"top\";\n    ctx.fillStyle = \"yellow\";\n\n    const words = text.split(\" \");\n    let line = \"\";\n    words.forEach((word, index) => {\n      const testLine = `${line + word} `;\n      const metrics = ctx.measureText(testLine);\n      const testWidth = metrics.width;\n      if (testWidth > maxWidth && index > 0) {\n        ctx.fillText(line, x, y);\n        line = `${word} `;\n        y += lineHeight;\n      } else {\n        line = testLine;\n      }\n    });\n\n    ctx.fillText(line, x, y);\n    y += lineHeight;\n  }\n};\n\nexport default renderCanvas;\n", "const generators = [\n  { url: \"https://source.unsplash.com/800x800?people\", weight: 10 },\n  { url: \"https://source.unsplash.com/800x800?group\", weight: 5 },\n];\n\nconst unrolledGenerators = generators.flatMap(({ url, weight }) => Array(weight).fill(url));\n\nconst pickRandom = (arr) => arr[Math.floor(Math.random() * arr.length)];\n\nexport const fetchNewImage = async () => {\n  const imageData = await fetch(pickRandom(unrolledGenerators));\n  return new Promise((resolve) => {\n    const image = new Image();\n\n    image.addEventListener(\"load\", () => resolve(image));\n\n    image.crossOrigin = \"anonymous\";\n    image.src = imageData.url;\n  });\n};\n\nexport const loadCustomImage = async ({ image }) => (\n  new Promise((resolve, reject) => {\n    if (!image.type.startsWith(\"image/\")) reject();\n    const imageReader = new FileReader();\n    imageReader.readAsDataURL(image);\n    imageReader.addEventListener(\"load\", (e) => {\n      const newImage = new Image();\n      newImage.addEventListener(\"load\", () => resolve(newImage));\n      newImage.src = e.target.result;\n    });\n  })\n);\n", "import renderCanvas from \"./canvas.js\";\r\nimport { fetchNewImage, loadCustomImage } from \"./image.js\";\r\n\r\nconst canvas = document.getElementById(\"picture\");\r\nconst canvasRect = canvas.getBoundingClientRect();\r\n\r\nconst initialWidth = 493;\r\nconst initialHeight = 897;\r\nconst descale = 1.8;\r\n\r\nconst state = {\r\n  image: new Image(),\r\n  canvas: {\r\n    offsetX: canvasRect.left,\r\n    offsetY: canvasRect.top,\r\n    scale: canvasRect.width / 800,\r\n  },\r\n  overlayCoords: {\r\n    x: 500,\r\n    y: 800 - (initialHeight / descale),\r\n    width: initialWidth / descale,\r\n    height: initialHeight / descale,\r\n    oldWidth: initialWidth / descale,\r\n    oldHeight: initialHeight / descale,\r\n  },\r\n  touch: {\r\n    eventCache: [],\r\n    prevDiff: -1,\r\n  },\r\n  move: {\r\n    startX: null,\r\n    startY: null,\r\n  },\r\n  isDragging: false,\r\n  displayText: false,\r\n  text: \"\",\r\n};\r\n\r\nconst zoomImage = (value) => {\r\n  state.overlayCoords.width = initialWidth * (value / 100);\r\n  state.overlayCoords.height = initialHeight * (value / 100);\r\n\r\n  state.overlayCoords.x += (state.overlayCoords.oldWidth - state.overlayCoords.width) / 2;\r\n  state.overlayCoords.y += (state.overlayCoords.oldHeight - state.overlayCoords.height) / 2;\r\n\r\n  state.overlayCoords.oldWidth = state.overlayCoords.width;\r\n  state.overlayCoords.oldHeight = state.overlayCoords.height;\r\n  renderCanvas({ canvas, state });\r\n};\r\n\r\n// overlay move listeners\r\nconst onMouseDown = (e) => {\r\n  const isTouch = !!e.touches;\r\n  // mouse position\r\n  const mx = Number((isTouch ? e.touches[0].clientX : e.clientX) - state.canvas.offsetX);\r\n  const my = Number((isTouch ? e.touches[0].clientY : e.clientY) - state.canvas.offsetY);\r\n\r\n  // overlay image position (with scaling)\r\n  const ix = state.overlayCoords.x * state.canvas.scale;\r\n  const iy = state.overlayCoords.y * state.canvas.scale;\r\n  const iw = state.overlayCoords.width * state.canvas.scale;\r\n  const ih = state.overlayCoords.height * state.canvas.scale;\r\n\r\n  if (mx > ix && mx < ix + iw && my > iy && my < iy + ih) {\r\n    state.isDragging = true;\r\n  }\r\n\r\n  state.move.startX = mx;\r\n  state.move.startY = my;\r\n};\r\ncanvas.addEventListener(\"mousedown\", onMouseDown);\r\ncanvas.addEventListener(\"touchstart\", onMouseDown);\r\n\r\ncanvas.addEventListener(\"mouseup\", () => { state.isDragging = false; });\r\n\r\nconst onMouseMove = (e) => {\r\n  const isTouch = !!e.touches;\r\n  // mouse position\r\n  const mx = Number((isTouch ? e.touches[0].clientX : e.clientX) - state.canvas.offsetX);\r\n  const my = Number((isTouch ? e.touches[0].clientY : e.clientY) - state.canvas.offsetY);\r\n\r\n  // overlay image position (with scaling)\r\n  const ix = state.overlayCoords.x * state.canvas.scale;\r\n  const iy = state.overlayCoords.y * state.canvas.scale;\r\n  const iw = state.overlayCoords.width * state.canvas.scale;\r\n  const ih = state.overlayCoords.height * state.canvas.scale;\r\n\r\n  // fancy cursor\r\n  if (mx > ix && mx < ix + iw && my > iy && my < iy + ih) {\r\n    canvas.style.cursor = \"pointer\";\r\n  } else {\r\n    canvas.style.cursor = \"initial\";\r\n  }\r\n\r\n  if (state.isDragging) {\r\n    // calculate the distance the mouse has moved\r\n    // since the last mousemove\r\n    const dx = mx - state.move.startX;\r\n    const dy = my - state.move.startY;\r\n\r\n    state.overlayCoords.x += dx / state.canvas.scale;\r\n    state.overlayCoords.y += dy / state.canvas.scale;\r\n\r\n    renderCanvas({ canvas, state });\r\n\r\n    // reset the starting mouse position for the next mousemove\r\n    state.move.startX = mx;\r\n    state.move.startY = my;\r\n  }\r\n};\r\ncanvas.addEventListener(\"mousemove\", onMouseMove);\r\ncanvas.addEventListener(\"touchmove\", onMouseMove);\r\n\r\n// background image drop listeners\r\ncanvas.addEventListener(\"dragover\", (e) => e.preventDefault());\r\ncanvas.addEventListener(\"drop\", async (e) => {\r\n  e.preventDefault();\r\n  if (!e.dataTransfer || e.dataTransfer.files.length <= 0) {\r\n    return;\r\n  }\r\n  state.image = await loadCustomImage({ image: e.dataTransfer.files[0] });\r\n  renderCanvas({ canvas, state });\r\n});\r\n\r\n// buttons\r\nconst buttonRandomImg = document.getElementById(\"randomize\");\r\nbuttonRandomImg.addEventListener(\"click\", async () => {\r\n  state.image = await fetchNewImage();\r\n  renderCanvas({ canvas, state });\r\n});\r\n\r\nconst inputCustomImg = document.getElementById(\"customImage\");\r\ninputCustomImg.addEventListener(\"change\", async (e) => {\r\n  e.preventDefault();\r\n  if (e.target.files.length <= 0) return;\r\n  state.image = await loadCustomImage({ image: e.target.files[0] });\r\n  renderCanvas({ canvas, state });\r\n});\r\nconst buttonCustomImg = document.getElementById(\"customImageBtn\");\r\nbuttonCustomImg.addEventListener(\"click\", () => {\r\n  inputCustomImg.click();\r\n});\r\n\r\nconst toggleText = document.getElementById(\"toggleText\");\r\nconst inputCustom = document.getElementById(\"customText\");\r\ntoggleText.addEventListener(\"click\", () => {\r\n  state.displayText = !state.displayText;\r\n  toggleText.innerText = toggleText.innerText === \"Přidat text\" ? \"Odebrat text\" : \"Přidat text\";\r\n  renderCanvas({ canvas, state });\r\n});\r\n\r\nconst replaceWithCustomText = async (e) => {\r\n  if (e.type === \"input\" || inputCustom.value) {\r\n    state.text = inputCustom.value;\r\n    renderCanvas({ canvas, state });\r\n  }\r\n};\r\ninputCustom.addEventListener(\"click\", replaceWithCustomText);\r\ninputCustom.addEventListener(\"input\", replaceWithCustomText);\r\n\r\n// slider\r\nconst slider = document.getElementById(\"slider\");\r\nslider.addEventListener(\"input\", (e) => {\r\n  zoomImage(e.target.value);\r\n  renderCanvas({ canvas, state });\r\n});\r\n\r\n// download link\r\nconst downloadLinkReal = document.createElement(\"a\");\r\ndownloadLinkReal.setAttribute(\"download\", \"TohleJsmeMy.jpg\");\r\nconst linkSave = document.getElementById(\"save\");\r\nlinkSave.addEventListener(\"click\", (e) => {\r\n  e.preventDefault();\r\n  downloadLinkReal.setAttribute(\"href\", canvas.toDataURL(\"image/jpeg\").replace(\"image/jpeg\", \"image/octet-stream\"));\r\n  downloadLinkReal.click();\r\n});\r\n\r\n// overlay touch gestures\r\ncanvas.addEventListener(\"pointerdown\", (e) => state.touch.eventCache.push(e));\r\ncanvas.addEventListener(\"pointermove\", (e) => {\r\n  for (let i = 0; i < state.touch.eventCache.length; i++) {\r\n    if (e.pointerId === state.touch.eventCache[i].pointerId) {\r\n      state.touch.eventCache[i] = e;\r\n      break;\r\n    }\r\n  }\r\n\r\n  // If two pointers are down, check for pinch gestures\r\n  if (state.touch.eventCache.length === 2) {\r\n    // Calculate the distance between the two pointers\r\n    const curDiff = Math.abs(state.touch.eventCache[0].clientX - state.touch.eventCache[1].clientX);\r\n\r\n    if (state.touch.prevDiff > 0) {\r\n      // zoom in\r\n      if (curDiff > state.touch.prevDiff) {\r\n        slider.value = Number(slider.value) + 2;\r\n        zoomImage(slider.value);\r\n      }\r\n      // zoom out\r\n      if (curDiff < state.touch.prevDiff) {\r\n        slider.value = Number(slider.value) - 2;\r\n        zoomImage(slider.value);\r\n      }\r\n    }\r\n\r\n    state.touch.prevDiff = curDiff;\r\n  }\r\n});\r\n\r\nconst onPointerUp = (e) => {\r\n  for (let i = 0; i < state.touch.eventCache.length; i++) {\r\n    if (state.touch.eventCache[i].pointerId === e.pointerId) {\r\n      state.touch.eventCache.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  // If the number of pointers down is less than two then reset diff tracker\r\n  if (state.touch.eventCache.length < 2) state.touch.prevDiff = -1;\r\n};\r\ncanvas.addEventListener(\"pointerup\", onPointerUp);\r\ncanvas.addEventListener(\"pointercancel\", onPointerUp);\r\ncanvas.addEventListener(\"pointerout\", onPointerUp);\r\ncanvas.addEventListener(\"pointerleave\", onPointerUp);\r\n\r\n// window resize tweak\r\nwindow.addEventListener(\"resize\", () => {\r\n  const resizedCanvasRect = canvas.getBoundingClientRect();\r\n  state.canvas = {\r\n    offsetX: resizedCanvasRect.left,\r\n    offsetY: resizedCanvasRect.top,\r\n    scale: resizedCanvasRect.width / 800,\r\n  };\r\n});\r\n\r\n// first render\r\nconst init = async () => {\r\n  state.image = await fetchNewImage();\r\n  renderCanvas({ canvas, state });\r\n};\r\n\r\ninit();\r\n"],
  "mappings": "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",
  "names": []
}
